import React, { useEffect, useState } from 'react'
import ReactDOM from 'react-dom'
import './App.css'
const url = 'http://5.144.96.71:66/'
function MyComponent() {
  const [error, setError] = useState(null)
  const [isLoaded, setIsLoaded] = useState(false)
  const [items, setItems] = useState([])

  // Примечание: пустой массив зависимостей [] означает, что
  // этот useEffect будет запущен один раз
  // аналогично componentDidMount()
  useEffect(() => {
    fetch('http://5.144.96.71:66/api/product')
      .then((res) => res.json())
      .then(
        (result) => {
          setIsLoaded(true)
          setItems(result.rows)
        },
        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),
        // чтобы не перехватывать исключения из ошибок в самих компонентах.
        (error) => {
          setIsLoaded(true)
          setError(error)
        },
      )
  }, [])

  if (error) {
    return <div>Ошибка: {error.message}</div>
  } else if (!isLoaded) {
    return <div>Загрузка...</div>
  } else {
    return (
      <div className="products">
        {items.map((item) => (
          <div className="product" key={item.id}>
            <img className="product__image" src={url + item.img}></img>
            {item.name} {item.price}
          </div>
        ))}
      </div>
    )
  }
}

export default MyComponent
